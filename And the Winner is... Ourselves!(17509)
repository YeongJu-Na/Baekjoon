/////////////////////////////////풀이 1- 우선순위 큐 사용
import java.util.PriorityQueue;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;

public class Main{
	public static void main(String[] args)throws IOException{
		
		PriorityQueue<problem> pq = new PriorityQueue<>();
		BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
		for(int i=0;i<11;i++) {
			StringTokenizer st =new StringTokenizer(br.readLine()," ");
			pq.add(new problem(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken())));
		}
		int answer=0;
		int time = 0;
		while(!pq.isEmpty()) {
			problem p = pq.poll();
			time += p.dd;
			answer+=(time+20*p.vv);
		}
		System.out.println(answer);
	}
}
class problem implements Comparable<problem>{
	int dd;
	int vv;
	problem(int dd, int vv){
		this.dd=dd;
		this.vv=vv;
	}
	public int compareTo(problem p) {
		return this.dd-p.dd;
	}
}
//////////////////////////  풀이2 - problem배열
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class test{
	public static void main(String[] args)throws IOException{
		
		problem[] arr = new problem[11];
		BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
		for(int i=0;i<11;i++) {
			StringTokenizer st =new StringTokenizer(br.readLine()," ");
			arr[i]=new problem(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
		}
		int answer=0;
		int time = 0;
		Arrays.sort(arr, (o1,o2)->o1.dd-o2.dd);
		for(int i=0;i<11;i++) {
			time += arr[i].dd;
			answer+=(time+20*arr[i].vv);
		}
		System.out.println(answer);
	}
}
class problem{
	int dd;
	int vv;
	problem(int dd, int vv){
		this.dd=dd;
		this.vv=vv;
	}
}
