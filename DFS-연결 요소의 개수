import java.util.Stack;
import java.util.LinkedList;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.util.StringTokenizer;
public class test{
	
	public static void main(String[] args)throws IOException{
		
		BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		LinkedList<Integer>[] graph = new LinkedList[n+1];
		for(int i=0;i<n+1;i++) graph[i] = new LinkedList<>();
		for(int i=0;i<m;i++) {
			st = new StringTokenizer(br.readLine()," ");
			int n1 = Integer.parseInt(st.nextToken());
			int n2 = Integer.parseInt(st.nextToken());
			graph[n1].add(n2);
			graph[n2].add(n1);
		}
		int answer = 0;
		boolean[] visit = new boolean[n+1];
		Stack<Integer> stk = new Stack<>();
		for(int i=1;i<n+1;i++) {
			if(!visit[i]) {
				answer++;
				stk.add(i);
			}
			while(!stk.isEmpty()) {
				int cur = stk.pop();
				for(int adj: graph[cur]) {
					if(visit[adj]) continue;
					visit[adj]=true;
					stk.add(adj);
				}
			}
		}
		System.out.println(answer);
	}
}
