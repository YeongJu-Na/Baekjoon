import java.io.*;
import java.util.*;

public class Main {
    static int[] parent;
    public static void main(String args[]) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        StringTokenizer st = new StringTokenizer(br.readLine());
        int n = Integer.parseInt(st.nextToken());
        int c = Integer.parseInt(st.nextToken());
        int[] arr = new int[n];

        for(int i=0;i<n;i++) arr[i]=Integer.parseInt(br.readLine());
        Arrays.sort(arr);

        int left = 1;       // 가능한 최소 거리
        int right = arr[n-1]-arr[0];    // 가능한 최대 거
        int ans = 0;

        while(left<=right){
            int mid = (left+right)/2;
            //인접 공유기 간 최대 거리가 mid일 때 가능한 최대 공유기 수가 c보다 작으면
            if(cnt(arr,mid)<c){
                right = mid-1;
            }
            else{
                ans=mid;
                left = mid+1;
            }
        }
        bw.write(ans + "\n");
        bw.flush();
        br.close();
        bw.close();

    }
    //인접 공유기 간 최대 거리가 dist일 때 가능한 공유기 수
    static int cnt(int[] arr, int dist){
        int ret = 1;
        int temp = arr[0];
        for(int i=1;i<arr.length;i++){
            if(arr[i]-temp<dist) continue;
            ret++;
            temp=arr[i];
        }
        return ret;
    }
}
