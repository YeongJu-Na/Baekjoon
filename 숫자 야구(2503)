import java.util.ArrayList;
import java.util.HashSet;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;

public class test{
	public static void main(String[] args)throws IOException{
		
		HashSet<Integer> hs = new HashSet<>();  //가능한 후보숫자배열, arraylist로 할 경우 remove어려움
    //remove(int idx), remove(Object o)가 있는데 값 표현과 인덱스표현 모두 숫자라서?
    //후보 숫자 배열 저장하는대신 입력값들 저장 후 for문으로 검사만 하는 방법도 있음
		for(int i=1;i<10;i++) {
			for(int j=1;j<10;j++) {
				for(int k=1;k<10;k++) {
					if(i==j||i==k||j==k) continue;
					hs.add(i*100+j*10+k);
				}
			}
		}
		
		BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
		int n= Integer.parseInt(br.readLine());
		while(n-->0) {
			StringTokenizer st = new StringTokenizer(br.readLine()," ");
			int qnum= Integer.parseInt(st.nextToken());
			int s = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			ArrayList<Integer> remove_list = new ArrayList<>();
			for(int num:hs) {
				if(strike(num,qnum)!=s || ball(num,qnum)!=b) remove_list.add(num);
			}
			for(int num:remove_list) {
				hs.remove(num);
			}
		}
		System.out.println(hs.size());
	}
  //문자열 형태나 char Array로 해도O-> 시간이 너무 오래걸릴거같아서 각자리수 계산함
  //->a%10: 1의 자리,(a/10)%10: 10의자리, a/100:100의자리
	static int ball(int a, int b) {
		int ret=0;
		int temp = a%10;
		if(b/100==temp||(b/10)%10==temp) ret++;
		temp=(a/10)%10;
		if(b/100==temp||(b%10)==temp) ret++;
		temp=a/100;
		if((b/10)%10==temp || b%10==temp) ret++;
		return ret;
	}

	static int strike(int a, int b) {
		int ret=0;
		while(a!=0) {
			if(a%10==b%10) ret++;
			a/=10;
			b/=10;
		}
		return ret;
	}
}
